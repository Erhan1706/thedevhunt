services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - backend
    volumes:
      - ./staticfiles:/home/devhunt/staticfiles/

  db:
    restart: always
    image: postgres:latest
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - backend

  web:
    build: .
    container_name: django
    command: ./scripts/prod_web_start.sh
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - backend
    restart: always
    volumes:
      - ./staticfiles:/home/devhunt/staticfiles/

  
  celery_worker:
    build: .
    command: celery -A thedevhunt worker -l info --concurrency=4
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - backend
    restart: unless-stopped

  celery_beat:
    build: .
    command: celery -A thedevhunt beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - backend
    restart: unless-stopped

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    command: ["redis-server"]
    networks:
      - backend
    restart: unless-stopped

  flower:
    build: .
    command: celery -A thedevhunt flower --port=5555 --basic_auth=${FLOWER_USER}:${FLOWER_PASSWORD}
    env_file:
      - .env
    depends_on:
      - db
      - redis
    ports:
      - "5555:5555"
    networks:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge